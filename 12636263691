if not WASDcon then
getgenv().WASDcon = {
    Draggable = false, 
}
end

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local W = Instance.new("TextButton")
local A = Instance.new("TextButton")
local S = Instance.new("TextButton")
local D = Instance.new("TextButton")
local Credit = Instance.new("TextLabel")

ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "WASD"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 1
Frame.Position = UDim2.new(0.2,0,0.7,0)
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.Size = UDim2.new(0,250,0,250)

W.Parent = Frame
W.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
W.BackgroundTransparency = 0
W.Position = UDim2.new(0.5,0,0.22,0)
W.AnchorPoint = Vector2.new(0.5, 0.5)
W.Size = UDim2.new(0,66,0,66)
W.Text = "W"

A.Parent = Frame
A.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
A.BackgroundTransparency = 0
A.Position = UDim2.new(0.22,0,0.5,0)
A.AnchorPoint = Vector2.new(0.5, 0.5)
A.Size = UDim2.new(0,66,0,66)
A.Text = "A"

S.Parent = Frame
S.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
S.BackgroundTransparency = 0
S.Position = UDim2.new(0.5,0,0.5,0)
S.AnchorPoint = Vector2.new(0.5, 0.5)
S.Size = UDim2.new(0,66,0,66)
S.Text = "S"

D.Parent = Frame
D.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
D.BackgroundTransparency = 0
D.Position = UDim2.new(0.78,0,0.5,0)
D.AnchorPoint = Vector2.new(0.5, 0.5)
D.Size = UDim2.new(0,66,0,66)
D.Text = "D"

Credit.Parent = Frame
Credit.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Credit.BackgroundTransparency = 1
Credit.Position = UDim2.new(0.5,0,0.66,0)
Credit.Size = UDim2.new(0, 0, 0, 0)
Credit.Font = Enum.Font.GothamBold
Credit.Text = "Made by romoneand#3770"
Credit.TextColor3 = Color3.fromRGB(255, 255, 255)
Credit.TextTransparency = 0
Credit.TextSize = 10.000
Credit.TextXAlignment = Enum.TextXAlignment.Left    

spawn(function()
		Credit.TextColor3 = Color3.fromRGB(170,0,170)
		
		local x = 0
		while wait() do
			Credit.TextColor3 = Color3.fromHSV(x,1,1)
		
			x = x + 4.5/255
			if x >= 1 then
				x = 0
			end
		end
	end)

W.MouseEnter:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true,119,false,game)
end)

W.MouseLeave:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(false,119,false,game)
end)

A.MouseEnter:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true,97,false,game)
end)

A.MouseLeave:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(false,97,false,game)
end)

S.MouseEnter:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true,115,false,game)
end)

S.MouseLeave:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(false,115,false,game)
end)

D.MouseEnter:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true,100,false,game)
end)

D.MouseLeave:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(false,100,false,game)
end)


if WASDcon.Draggable then
local function DBWXBII_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	
   local UIS = game:GetService('UserInputService')
local frame = script.Parent
local dragToggle = nil
local dragSpeed = 0.30
local dragStart = nil
local startPos = nil

local function updateInput(input)
 local delta = input.Position - dragStart
 local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
  startPos.Y.Scale, startPos.Y.Offset + delta.Y)
 game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

frame.InputBegan:Connect(function(input)
 if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
  dragToggle = true
  dragStart = input.Position
  startPos = frame.Position
  input.Changed:Connect(function()
   if input.UserInputState == Enum.UserInputState.End then
    dragToggle = false
   end
  end)
 end
end)

UIS.InputChanged:Connect(function(input)
 if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
  if dragToggle then
   updateInput(input)
  end
 end
end)

end
coroutine.wrap(DBWXBII_fake_script)()
end